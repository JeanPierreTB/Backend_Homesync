worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Limitar las conexiones simultáneas por IP
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Limitar la tasa de solicitudes por IP
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=1r/s;

    # Habilitar el módulo para configurar los timeouts
    keepalive_timeout 15s;
    send_timeout 15s;

    # Configuración SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;

    upstream user_service {
        least_conn;
        server user-service:3001;
        server user-service2:3001;
    }

    upstream payment_service {
        least_conn;
        server payment-service:3002;
        server payment-service2:3002;
    }

    server {
        listen 80;
        server_name _;

        # Redirigir tráfico HTTP a HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/certificate.crt;  
        ssl_certificate_key /etc/nginx/ssl/private.key;  

        limit_conn addr 10; 
        limit_req zone=req_limit_per_ip burst=5 nodelay;  

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /cliente/ {
            limit_conn addr 10;  # Limitar conexiones simultáneas
            limit_req zone=req_limit_per_ip burst=5 nodelay;  # Limitar solicitudes por segundo
            proxy_pass http://user_service/cliente/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /administrador/ {
            limit_conn addr 10;
            limit_req zone=req_limit_per_ip burst=5 nodelay;
            proxy_pass http://user_service/administrador/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /proveedor/ {
            limit_conn addr 10;
            limit_req zone=req_limit_per_ip burst=5 nodelay;
            proxy_pass http://user_service/proveedor/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /pagos/ {
            limit_conn addr 10;
            limit_req zone=req_limit_per_ip burst=5 nodelay;
            proxy_pass http://payment_service/pagos/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
